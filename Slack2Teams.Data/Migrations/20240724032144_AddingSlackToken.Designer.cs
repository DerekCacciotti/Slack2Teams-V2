// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Slack2Teams.Data;

#nullable disable

namespace Slack2Teams.Data.Migrations
{
    [DbContext(typeof(Slack2TeamsContext))]
    [Migration("20240724032144_AddingSlackToken")]
    partial class AddingSlackToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Slack2Teams.Data.Models.Tenant", b =>
                {
                    b.Property<Guid>("TenantPK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Editor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SlackTokenFK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SlackTokenUserSlackTokenPK")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFK")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenantPK");

                    b.HasIndex("SlackTokenUserSlackTokenPK");

                    b.ToTable("Tenant");
                });

            modelBuilder.Entity("Slack2Teams.Data.Models.UserSlackToken", b =>
                {
                    b.Property<Guid>("UserSlackTokenPK")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Editor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(2);

                    b.Property<string>("SlackToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.HasKey("UserSlackTokenPK");

                    b.ToTable("UserSlackToken");
                });

            modelBuilder.Entity("Slack2Teams.Data.Models.Tenant", b =>
                {
                    b.HasOne("Slack2Teams.Data.Models.UserSlackToken", "SlackToken")
                        .WithMany()
                        .HasForeignKey("SlackTokenUserSlackTokenPK");

                    b.Navigation("SlackToken");
                });
#pragma warning restore 612, 618
        }
    }
}
